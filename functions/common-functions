#!/bin/bash

set -eo pipefail
shopt -s nullglob

[[ -n "$TRACE" ]] && set -x

COLOR_WHITE="0xff 0xff 0xff $ALPHA"
COLOR_RED="0xff 0x0 0x0 $ALPHA"
COLOR_GREEN="0x00 0xff 0x00 $ALPHA"
COLOR_GREEN2="0x2e 0xcc 0x40 $ALPHA"
COLOR_BLUE="0x00 0x00 0xff $ALPHA"
COLOR_BLUE2="0x00 0x7d 0xd9 $ALPHA"
COLOR_GRAY="0xaa 0xaa 0xaa $ALPHA"
COLOR_SILVER="0xdd 0xdd 0xdd $ALPHA"
COLOR_BLACK="0x00 0x00 0x00 $ALPHA"
COLOR_NAVY="0x00 0x1f 0x3f $ALPHA"
COLOR_AQUA="0x7f 0xdb 0xff $ALPHA"
COLOR_TEAL="0x39 0xcc 0xcc $ALPHA"
COLOR_OLIVE="0x3d 0x99 0x70 $ALPHA"
COLOR_LIME="0x01 0xff 0x70 $ALPHA"
COLOR_YELLOW="0xFF 0xdc 0x00 $ALPHA"
COLOR_ORANGE="0xFF 0x85 0x36 $ALPHA"
COLOR_MAROON="0x85 0x14 0x4b $ALPHA"
COLOR_FUCHSIA="0xf0 0x12 0xbe $ALPHA"
COLOR_PURPLE="0xb1 0x0d 0xc9 $ALPHA"

fail() {
  echo "$@" 1>&2
  return 1
}

fatal() {
  echo "$@" 1>&2
  exit 1
}

get_available_colors() {
  while read key; do
    key=${key/COLOR_/}
    echo ${key,,}
  done < <(compgen -v | grep ^COLOR_)
}

get_color() {
  key=COLOR_${1^^}
  color=${!key}

  if [[ -z "$color" ]]; then
    fatal "uknown color: $1 (supported color names: $(echo -n $(get_available_colors)))"
  fi

  echo "$color"
}

get_colors() {
  for color; do
    get_color $color
  done
}

I2C=
for dev in /sys/devices/pci0000:00/0000:00:1f.4/i2c-*; do
  I2C=$(basename $dev i2c-)
  I2C=${I2C/i2c-/}
done

if [[ -z "$I2C" ]]; then
  echo "Cannot find I2C"
  exit 1
fi
